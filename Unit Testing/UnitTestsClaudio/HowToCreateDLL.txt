l######################################################################
HOW TO CREATE A DLL (SHARED LIBRARY) IN GCC TO BE CALLED BY MATLAB
  By: Jim Cale
  Date: 12 July 2021
######################################################################

Version information for steps below:
OS - macOS Big Sur v 11.4
Matlab - v R2020b, Mac version (academic license) 
gcc - Apple clang v 12.0.5

-----------------------------------------------------------------------

Steps to create a shared library:

1) In MATLAB, give command >> mex -setup c, to determine the installed compiler. The steps below assume gcc.

2) In C code editor, create code for functions you want to compile into a library
(e.g., mydll.c, mydll.h, and main.c)

mydll.c : contains all functions in library
mydll.h : header file
main.c. : calls the functions (just as a test) 

3) Perform an initial test to verify the functions can be called by executing
>> gcc main.c mydll.c -o test

And then call the executable with
>> .\test

4) Compile the library (gcc commands)

Compile library and create object code (.o file)
>> gcc -c -Wall -Werror -fPIC mydll.c 

Output: mydll.o

Make object a shared library (.so file)
>> gcc -shared -o libmydll.so mydll.o


MATLAB
5) Ensure that library is in current path, load library AND header file using loadlibrary(), ensure you can see all functions in the library using libfunctions(). You should then be able to access the functions through calllib() (see run_DLL_test.m). 
